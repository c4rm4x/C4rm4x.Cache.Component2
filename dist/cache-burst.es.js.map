{"version":3,"file":"cache-burst.es.js","sources":["../lib/cache-storage.service.ts","../lib/cache-burst.service.ts","../lib/cache-burst.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ICookieConfig, IStorageConfig } from \"./cache-storage.interface\"\r\nimport { Cookie } from \"ng2-cookies/ng2-cookies\"\r\n\r\nconst CookieConfigDefaults : ICookieConfig = {\r\n    ttl: 1\r\n}\r\n\r\nconst StorageConfigDefaults : IStorageConfig = {\r\n    prefix: \"cache-\",\r\n    cookie: CookieConfigDefaults\r\n}\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    constructor(private config? : IStorageConfig) {        \r\n        config = config || StorageConfigDefaults;\r\n    }\r\n\r\n    public getCache(scope: string) : any {\r\n        let cache = sessionStorage.getItem(this.getFullScope(scope));\r\n\r\n        if (!cache && this.config.cookie) {\r\n            cache = Cookie.get(this.getFullScope(scope));\r\n\r\n            if (cache) {\r\n                sessionStorage.setItem(this.getFullScope(scope), cache);\r\n            }\r\n        }\r\n\r\n        return JSON.parse(cache || '{}');\r\n    }\r\n\r\n    public setCache(scope: string, cache: any) : void {\r\n        let cacheAsString = JSON.stringify(cache);\r\n        \r\n        sessionStorage.setItem(this.getFullScope(scope), cacheAsString);\r\n\r\n        if (this.config.cookie) {\r\n            Cookie.set(this.getFullScope(scope), cacheAsString, this.config.cookie.ttl || 1);\r\n        }\r\n    }\r\n\r\n    private getFullScope(scope: string) : string {\r\n        return this.config.prefix + scope;\r\n    }\r\n}","import { Injectable } from \"@angular/core\"\r\nimport { ICacheBurstConfig } from \"./cache-burst.interface\"\r\nimport { StorageService } from \"./cache-storage.service\"\r\n\r\nconst CacheBurstConfigDefaults : ICacheBurstConfig = {\r\n    scope: \"\",\r\n    baseApiUrl: \"\",\r\n    console: false,\r\n    param: \"rev\"\r\n}\r\n\r\n@Injectable()\r\nexport class CacheBurstService {\r\n\r\n    constructor(private storage: StorageService, private config?: ICacheBurstConfig) {        \r\n        config = config || CacheBurstConfigDefaults;\r\n    }\r\n\r\n    public get(url: string) : string {\r\n        if (!this.isBaseApiUrl(url)) {\r\n            return url;\r\n        }        \r\n\r\n        let cache = this.storage.getCache(this.config.scope);\r\n        let rev = cache[this.getResourceKey(url)];\r\n\r\n        if (!rev) {\r\n            return url;\r\n        }\r\n\r\n        return url + this.addRevision(url, rev);\r\n    }\r\n\r\n    public burst(url: string) : void {\r\n        if (!this.isBaseApiUrl(url)) {\r\n            return;\r\n        }\r\n\r\n        let cache = this.storage.getCache(this.config.scope);\r\n        let key = this.getResourceKey(url);\r\n\r\n        if (cache[key]) {\r\n            this.increaseRevision(cache, key);\r\n        } else {\r\n            cache[key] = 1;\r\n        }\r\n\r\n        this.storage.setCache(this.config.scope, cache);\r\n    }\r\n\r\n    private isBaseApiUrl(url: string) : boolean {\r\n        return url.indexOf(this.config.baseApiUrl) >= 0;\r\n    }\r\n\r\n    private getResourceKey(url: string) : string {\r\n        return url.replace(this.config.baseApiUrl, \"\");\r\n    }\r\n \r\n    private addRevision(url: string, rev: number) {\r\n        let join = \"?\";\r\n\r\n        if (url.indexOf(\"?\") >= 0) {\r\n            join = \"&\";\r\n        }       \r\n\r\n        return join + this.config.param + \"=\" + rev;\r\n    }\r\n\r\n    private increaseRevision(cache: any, key: string) : void {\r\n        cache[key] = cache[key] + 1;\r\n\r\n        if (this.config.console) {\r\n            console.log(\"Invalidating cache for key \" + this.config.scope + \"-\" + key);\r\n        }\r\n    }\r\n}","import { NgModule, } from \"@angular/core\";\r\nimport { CacheBurstService } from \"./cache-burst.service\";\r\nimport { StorageService } from \"./cache-storage.service\";\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [CacheBurstService],\r\n    declarations: [CacheBurstService],\r\n    providers: [StorageService],\r\n})\r\n\r\nexport class CacheBurstModule { }"],"names":[],"mappings":"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"}